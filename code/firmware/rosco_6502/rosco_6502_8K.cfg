#------------------------------------------------------------
#                            ___ ___ ___ ___
#  ___ ___ ___ ___ ___      |  _| __|   |__ |
# |  _| . |_ -|  _| . |     | . |__ | | | __|
# |_| |___|___|___|___|_____|___|___|___|___|
#                     |_____|   8K ROM config
#------------------------------------------------------------
# Copyright (c)2022-2024 Ross Bamford, Xark and contributors
# See top-level LICENSE.md for licence information.

SYMBOLS {
    __FWRAMSTART__:   type = export, value = $0200;   # $0200-$02FF FW variables, vectors and thunks
    __FWRAMSIZE__:    type = export, value = $0100;   # 256 bytes 
    __BANKRAMSTART__: type = export, value = $4000;
    __BANKRAMSIZE__:  type = export, value = $8000;   # 32K banked RAM x 16
    __BANKROMSTART__: type = export, value = $E000;
    __BANKROMSIZE__:  type = export, value = $2000;   # 8K ROM
}
MEMORY {
    ZP:        file = "", start = $0000,            size = $0100,               define = yes;
    FWRAM:     file = "", start = __FWRAMSTART__,   size = __FWRAMSIZE__;
    BROM0:     file = %O, start = __BANKROMSTART__, size = __BANKROMSIZE__,     bank = $00 , fill = yes;
}
SEGMENTS {
    ZEROPAGE:   load = ZP,                  type = zp;
    FWRAM:      load = FWRAM,               type = bss, define = yes,   optional = yes;
    ROMCOMMON0: load = BROM0,               type = ro,  define = yes;
    ROM0:       load = BROM0,               type = ro,  define = yes;
    RODATA0:    load = BROM0,               type = ro,  define = yes,   optional = yes;    
    FWDATA:     load = BROM0, run = FWRAM,  type = rw,  define = yes,   optional = yes;
    VECTORS0:   load = BROM0,               type = ro,  start = $FFFA;
}
