#------------------------------------------------------------
#                            ___ ___ ___ ___
#  ___ ___ ___ ___ ___      |  _| __|   |__ |
# |  _| . |_ -|  _| . |     | . |__ | | | __|
# |_| |___|___|___|___|_____|___|___|___|___|
#                     |_____|  1-bank RAM cfg
#------------------------------------------------------------
# Copyright (c)2022-2024 Ross Bamford, Xark and contributors
# See top-level LICENSE.md for licence information.

SYMBOLS {
  __STACKSIZE__:        type = weak,    value = $0800;  # 2K C stack
  __ZPSTART__:          type = weak,    value = $0040;
  __ZPEND__:            type = weak,    value = $0100;
  __LOWRAMSTART__:      type = export,  value = $0800;
  __LOWRAMSIZE__:       type = export,  value = $3800;  # 15K application low-RAM
  __BANKRAMSTART__:     type = export,  value = $4000;
  __BANKRAMSIZE__:      type = export,  value = $8000;  # 32K high-RAM (one bank)
}
FEATURES {
    # Default start address is $1000
    STARTADDRESS:       default = $0800;
}
MEMORY {
    ZP:         file = "", define = yes, start = __ZPSTART__,   size = __ZPEND__ - __ZPSTART__;
    MAIN:       file = %O,               start = %S,            size = __BANKRAMSTART__ + __BANKRAMSIZE__ - %S;
}
SEGMENTS {
    ZEROPAGE: load = ZP,   type = zp;
    STARTUP:  load = MAIN, type = ro,  optional = yes;
    LOWCODE:  load = MAIN, type = ro,  optional = yes;
    ONCE:     load = MAIN, type = ro,  optional = yes;
    CODE:     load = MAIN, type = rw;
    RODATA:   load = MAIN, type = rw;
    DATA:     load = MAIN, type = rw;
    BSS:      load = MAIN, type = bss, define   = yes;
}
